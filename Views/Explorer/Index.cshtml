@model ExplorerViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="NavPannel">
    <button class="NavEllement" id="CreateFolder"> Создать папку</button>


    <button class="NavEllement"> Удалить папку</button>
    <button class="NavEllement"> Переименовать папку</button>
    <button class="NavEllement"> Загрузить файл</button>
    <button class="NavEllement"> Удалить файл</button>
    <button class="NavEllement"> Переименовать файл</button>
    <button class="NavEllement"> Выгрузить файл</button>
    <button class="NavEllement"> Добавить расширение </button>
    <button class="NavEllement"> Удалить расширение</button>

    <form class="hidden" id="CreateFolderForm" asp-action="CreateFolder" asp-controller="Explorer" method="post">
        <div class="form-group">
            <label asp-for="folders[0].foldername" class="control-label"></label>
            <input asp-for="folders[0].foldername" class="form-control" />
            <span asp-validation-for="folders[0].foldername" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary">Создать папку</button>
    </form>
</div>

<div class="tree">

    <ul>
        @foreach (var rootFolder in Model.folders.Where(f => f.parentfolderid == 0))
        {
            var combinedModel = new { ExplorerViewModel = Model, RootFolder = rootFolder };

            <li>
                @Html.Partial("_Folders_Partial", combinedModel)
            </li>
        }
    </ul>
</div>

<div id="file-content1">

    <span> Содержимое файла </span>

</div>

<div id="file-content">

    <span> </span>

</div>





<script>
    document.addEventListener("DOMContentLoaded", function () {
        const folderElements = document.querySelectorAll(".folder");

        folderElements.forEach(function (folderElement) {
            folderElement.addEventListener("click", function () {
                // Находим следующий элемент с классом "folder-content"
                const contentElement = folderElement.nextElementSibling;

                // Переключаем класс "hidden" этого элемента
                if (contentElement && contentElement.classList.contains("folder-content")) {
                    contentElement.classList.toggle("hidden");
                }
            });
        });
    });
</script>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const fileLinks = document.querySelectorAll(".file");
        const fileContentContainer = document.getElementById("file-content");

        fileLinks.forEach(function (link) {
            link.addEventListener("click", function () {
                const fileId = link.getAttribute("data-fileid");


                fetch("/Explorer/GetFileContent?id=" + fileId)
                    .then(response => response.text()) 
                    .then(data => {
                        fileContentContainer.innerHTML = data; 
                    })
                    .catch(error => console.error("Ошибка при загрузке файла: " + error));
            });
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var showFormButton = document.getElementById("CreateFolder");
        var myForm = document.getElementById("CreateFolderForm");

        showFormButton.addEventListener("click", function () {
            if (myForm.classList.contains("hidden")) {
                myForm.classList.remove("hidden");
            } else {
                myForm.classList.add("hidden");
            }
        });
    });
</script>




